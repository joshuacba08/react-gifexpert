{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","Helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAIaA,G,KAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,YAAc,iDACdC,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOH,c,QCJlBI,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,sBAAKC,UAAW,yCAAhB,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCJFK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UAAUF,GAD5C,+DAEDG,MAAMR,GAFL,cAEdS,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATtB,kBAabY,GAba,4CAAH,sDC6BNK,EAzBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECJN,SAAEA,GAAe,IAAD,EAEdtB,mBAAS,CAC/B4B,KAAK,GACLO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WAENjB,EAASC,GACJiB,MAAM,SAAAC,GAEHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDb0BK,CAAcnB,GAAlCU,EAFiB,EAEtBJ,KAAaO,EAFS,EAETA,QAErB,OACQ,qCACI,6BAAMb,IAEJa,GAAW,wCAEjB,qBAAKjB,UAAW,YAAhB,SAEYc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIhB,aEQ3B2B,MAzBf,WAAyB,IAAD,EAEgB1C,mBAAS,CAAC,cAF1B,mBAEb2C,EAFa,KAED5C,EAFC,KAIpB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ4C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADLA,YCdnCsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.261eb6db.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport '../index.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >2 ){\r\n            setCategories(cats => [inputValue, ...cats,]);\r\n            setinputValue('');\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                placeholder = \"Ingresá el nombre del Gif que querés ver\"\r\n                onChange = {handleInputChange}\r\n            />                \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport '../index.css';\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className= \"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\n\r\n//Esta función regresa una promesa que resuelve la colección de mis imágenes\r\n export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8zLs1S1gCgaADTdedKs3tYKX1SyHT9JY`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\nimport '../index.css'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n  \r\n    return (\r\n            <>  \r\n                <h3>{ category }</h3>\r\n\r\n                { loading && <p>Loading</p> }\r\n\r\n            <div className= \"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                                key={ img.id } \r\n                                {...img}  \r\n                            />\r\n                        ))\r\n                    \r\n                    }\r\n            </div>\r\n         </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../Helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n            });\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}